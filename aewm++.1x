.\" aewm++ - a minimalistic X11 window manager based on aewm
.\" by Frank Hale
.\" Released under the terms of the GNU GPL. www.gnu.org
.\" Free software! Please see README for details and license. --
.TH aewm++ 1x
.SH "NAME"
aewm++ \- a minimalistic window manager for X11
.SH "SYNOPSIS"
.BI aewm++
-display [display],
-fn [font],
-fg|-bg|-bd [color],
-fm [follow|sloppy|click],
-bw [width],
-md [max desktops],
-tj [left|center|right],
-es [true|false],
-wm [true|false],
-new1|-new2 [cmd],
-usage,
-help

.SH DESCRIPTION
.B aewm++
is an X11 window manager with a minimal set of features. It provides the most common features found
a window manager. For instance you can iconify, maximize, shade and close windows. You can separate
your windows via virtual desktops. Virtual desktops are separate workspaces in which to perform work.
Switching them is as easy as pressing alt+ctrl+page up or alt+ctrl+page down key combinations. By
default there are 4 virtual desktops.

aewm++ was written from the aewm source code. The reason behind this is simple. aewm is probably the
most popular window manager for hackers to fork and hack on. Many window managers were written from
its source. However the source code is in C and there are hackers out there I am sure that would like
to hack a small window manager written in C++. Hence aewm++ was born. While aewm has minimal features
aewm++ will try to build upon it with more features that the author feels necessary in a good minimal
window manager.

The titlebar has a lot of functionality. Double clicking with the 1st button will maximize a window.
Double clicking a maximized window returns it to its original size, Double clicking a shaded window
unshades the window. Clicking with the first button and dragging will move the window. Using the
middle button and clicking the titlebar will shade the window. Do this again on a shaded window and
it unshades it. Middle clicking in the box on the right edge of the titlebar will allow you to resize
the window. Clicking with the 1st button will iconify the window. Clicking with the 3rd button will
delete the window.

If there are windows which are iconified you can press the middle button on the root window and it
will pop up an icon menu. Clicking on items in the icon menu will uniconify them.

Virtual Desktops are cycled with the page up and page down keys. If you don't specify the -md [max
number of desks]  on the command line then you will start with 4 virtual desktops. Currently there
is no way to move windows back and forth between desktops. There is also no such thing as sticky
windows yet in aewm++.

aewm++ is meant to be used with a 3 button mouse. If you don't have one feel free to hack the code to
change the functionality of the buttons.

As of version 1.0.13 there is now an icon menu. If you middle click on the root window you will see
the icon menu if you have clients that are iconified. If no clients are iconified you will see nothing. If you middle click on the root window again while the menu is open it will hide. Icons for the current desktop are the only ones that show. Once you switch desktops whatever icons on that desktop will show.

To get the real effect of aewm++ I highly recommend you use it with fspanel. This will give you a nice
task bar which will show icons, a clock and buttons to switch virtual desktops.

.SH OPTIONS

.TP
.B -display \fIdisplay\fP
Specifies which display to start aewm++ on. This is useful if you want to test aewm++ inside of Xnest.

.TP
.B -md \fInumber\fP
Specifies the number of max virtual desktops to start with. The default number of desktops is 4.

.TP
.B -tj \fIleft|center|right\fP
Specifies the text justification for window titles in the titlebar. The options are left, center or
right.

.TP
.B -es \fItrue|false\fP
Specifies if edge snapping is turned on or not. Edge snapping occurs when a window is dragged within
10 pixels of the edge. It is then snapped to the edge. Specify true or false with this option. Default
is true.

.TP
.B -wm \fItrue|false\fP
Specifies if wire move is on or not. If its off then windows are moved via an opaque move. In other
words the entire contents of the window are moved when the window is dragged. You specify true or
false with this option. Default is true.

.TP
.B -fn \fIfont-spec\fP
 Draw window titles with the user defined font.

.TP
.B -fm \fIfollow|sloppy|click\fP
Defines what focus model you wish to use. The choices are follow which is focus follows the mouse
pointer, sloppy provides focus follows mouse with the exception that the root window doesn't get
focus, and last but not least there is click which provides the click to focus model. Clicking on a
window will give it focus until another client is clicked then focus is transferred to that client.
The default value is "click".


.TP
.B -bw \fIwidth\fP
Defines how wide window borders will be.

.TP
.B -new1 \fIcmd\fP, -new2 \fIcmd\fP
Change the command executed when each mouse button is
clicked on the root window. Button mouse-3, which is
modified with option -new2, runs "x-terminal-emulator
-ls -sb -bg black -fg white" by default.

.TP
.B -fg \fIcolor\fP, -bg \fIcolor\fP, -bd \fIcolor\fP
Use
.I color
for the foreground, background, and borders of window frames,
respectively.

.TP
.B -version
Print version information to stdout and exit.

.SH "SEE ALSO"
appbar(1), aewm++_fspanel(1), setrootimage(1), aewm++_xsession(1)

.SH "AUTHOR"
aewm++ by Frank Hale <frankhale@yahoo.com>
.SH "WEBSITE"
http://sapphire.sourceforge.net/
